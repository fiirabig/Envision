#############################################################################
# Makefile for building: libmodelbase.so
# Generated by qmake (2.01a) (Qt 4.8.5) on: Tue Oct 8 10:52:44 2013
# Project:  ModelBase.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DDEBUG -DMODELBASE_LIBRARY -DQT_PLUGIN -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -D_REENTRANT -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -pedantic-errors -Werror -Wextra -O2 -g -fno-omit-frame-pointer -g -D_REENTRANT -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -Isrc -Itest -I../../Envision -Idebug
LINK          = g++
LFLAGS        = -Wl,-rpath,'$$ORIGIN' -Wl,-rpath,'$$ORIGIN/qt' -Wl,-rpath,'$$ORIGIN/..' -Wl,-rpath,'$$ORIGIN/../qt' -shared
LIBS          = $(SUBLIBS)  -L/usr/lib64 -L/home/marti/git/Envision/Core/../DebugBuild -lcore -lpthread -lQtGui -lQtCore 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = src/commands/CompositeNodeChangeChild.cpp \
		src/nodes/composite/CompositeNode.cpp \
		src/nodes/composite/CompositeIndex.cpp \
		src/nodes/composite/Attribute.cpp \
		src/nodes/composite/AttributeChain.cpp \
		src/persistence/ClipboardStore.cpp \
		src/test_nodes/TestNodesInitializer.cpp \
		src/commands/NodeOwningCommand.cpp \
		src/model/ModelManager.cpp \
		src/concurrent/NodeReadWriteLock.cpp \
		src/model/Model.cpp \
		test/VisitorTests.cpp \
		src/persistence/PersistentStore.cpp \
		src/commands/AddModifiedNode.cpp \
		src/test_nodes/PositionExtension.cpp \
		src/nodes/Character.cpp \
		src/nodes/Boolean.cpp \
		src/nodes/Float.cpp \
		src/commands/ListPut.cpp \
		src/persistence/PersistedNode.cpp \
		src/test_nodes/BinaryNodePersistenceUnit.cpp \
		src/test_nodes/PartialList.cpp \
		src/test_nodes/BinaryNodeAccessUnit.cpp \
		src/test_nodes/BinaryNode.cpp \
		test/ListTest.cpp \
		src/commands/ListRemove.cpp \
		src/commands/ListInsert.cpp \
		src/commands/NameChange.cpp \
		src/nodes/List.cpp \
		test/NotificationsTest.cpp \
		test/NotificationListener.cpp \
		src/nodes/Node.cpp \
		src/commands/UndoCommand.cpp \
		test/ConcurrencyTests.cpp \
		src/commands/SetModificationTarget.cpp \
		src/nodes/Reference.cpp \
		test/PersistenceTests.cpp \
		test/PersistentStoreMock.cpp \
		src/ModelException.cpp \
		test/PositionTests.cpp \
		src/nodes/Integer.cpp \
		test/UndoRedoTests.cpp \
		test/SimpleTests.cpp \
		src/nodes/Text.cpp \
		src/modelbase.cpp debug/moc_Model.cpp \
		debug/moc_NotificationListener.cpp \
		debug/moc_modelbase.cpp
OBJECTS       = debug/CompositeNodeChangeChild.o \
		debug/CompositeNode.o \
		debug/CompositeIndex.o \
		debug/Attribute.o \
		debug/AttributeChain.o \
		debug/ClipboardStore.o \
		debug/TestNodesInitializer.o \
		debug/NodeOwningCommand.o \
		debug/ModelManager.o \
		debug/NodeReadWriteLock.o \
		debug/Model.o \
		debug/VisitorTests.o \
		debug/PersistentStore.o \
		debug/AddModifiedNode.o \
		debug/PositionExtension.o \
		debug/Character.o \
		debug/Boolean.o \
		debug/Float.o \
		debug/ListPut.o \
		debug/PersistedNode.o \
		debug/BinaryNodePersistenceUnit.o \
		debug/PartialList.o \
		debug/BinaryNodeAccessUnit.o \
		debug/BinaryNode.o \
		debug/ListTest.o \
		debug/ListRemove.o \
		debug/ListInsert.o \
		debug/NameChange.o \
		debug/List.o \
		debug/NotificationsTest.o \
		debug/NotificationListener.o \
		debug/Node.o \
		debug/UndoCommand.o \
		debug/ConcurrencyTests.o \
		debug/SetModificationTarget.o \
		debug/Reference.o \
		debug/PersistenceTests.o \
		debug/PersistentStoreMock.o \
		debug/ModelException.o \
		debug/PositionTests.o \
		debug/Integer.o \
		debug/UndoRedoTests.o \
		debug/SimpleTests.o \
		debug/Text.o \
		debug/modelbase.o \
		debug/moc_Model.o \
		debug/moc_NotificationListener.o \
		debug/moc_modelbase.o
DIST          = /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		../Core/common.pri \
		../Core/common_plugin.pri \
		/usr/lib64/qt4/mkspecs/features/debug.prf \
		/usr/lib64/qt4/mkspecs/features/debug_and_release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/build_pass.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/shared.prf \
		/usr/lib64/qt4/mkspecs/features/dll.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		ModelBase.pro
QMAKE_TARGET  = modelbase
DESTDIR       = 
TARGET        = libmodelbase.so
TARGETD       = libmodelbase.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c -include debug/modelbase $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Debug  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	{ test -z "$(DESTDIR)" || cd "$(DESTDIR)"; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index ." -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true



qmake:  FORCE
	@$(QMAKE) CONFIG+=debug_and_release -o Makefile.Debug ModelBase.pro

dist: 
	@$(CHK_DIR_EXISTS) debug/modelbase1.0.0 || $(MKDIR) debug/modelbase1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) debug/modelbase1.0.0/ && $(COPY_FILE) --parents src/commands/CompositeNodeChangeChild.h src/nodes/composite/CompositeNode.h src/nodes/composite/CompositeIndex.h src/nodes/composite/Attribute.h src/nodes/composite/AttributeChain.h src/test_nodes/TestNodesInitializer.h src/commands/NodeOwningCommand.h src/model/ModelManager.h src/concurrent/InterruptibleThread.h src/concurrent/NodeReadWriteLock.h src/model/Model.h src/visitor/VisitorDefinition.h src/visitor/Visitor.h src/ModelException.h src/commands/FieldSet.h src/commands/ListInsert.h src/commands/ListPut.h src/commands/ListRemove.h src/commands/NameChange.h src/commands/PointerFieldSet.h src/commands/UndoCommand.h src/modelbase_api.h src/nodes/Boolean.h src/nodes/Character.h src/nodes/Float.h src/nodes/Integer.h src/nodes/List.h src/nodes/Node.h src/nodes/Reference.h src/nodes/Text.h src/nodes/TypedList.h src/nodes/TypedListDefinition.h src/nodes/nodeMacros.h src/persistence/ClipboardStore.h src/persistence/PersistedNode.h src/persistence/PersistedValue.h src/persistence/PersistentStore.h src/precompiled.h src/test_nodes/BinaryNode.h src/test_nodes/BinaryNodeAccessUnit.h src/test_nodes/BinaryNodePersistenceUnit.h src/test_nodes/PartialList.h src/test_nodes/PositionExtension.h src/commands/AddModifiedNode.h test/NotificationListener.h src/commands/SetModificationTarget.h test/PersistentStoreMock.h src/modelbase.h debug/modelbase1.0.0/ && $(COPY_FILE) --parents src/commands/CompositeNodeChangeChild.cpp src/nodes/composite/CompositeNode.cpp src/nodes/composite/CompositeIndex.cpp src/nodes/composite/Attribute.cpp src/nodes/composite/AttributeChain.cpp src/persistence/ClipboardStore.cpp src/test_nodes/TestNodesInitializer.cpp src/commands/NodeOwningCommand.cpp src/model/ModelManager.cpp src/concurrent/NodeReadWriteLock.cpp src/model/Model.cpp test/VisitorTests.cpp src/persistence/PersistentStore.cpp src/commands/AddModifiedNode.cpp src/test_nodes/PositionExtension.cpp src/nodes/Character.cpp src/nodes/Boolean.cpp src/nodes/Float.cpp src/commands/ListPut.cpp src/persistence/PersistedNode.cpp src/test_nodes/BinaryNodePersistenceUnit.cpp src/test_nodes/PartialList.cpp src/test_nodes/BinaryNodeAccessUnit.cpp src/test_nodes/BinaryNode.cpp test/ListTest.cpp src/commands/ListRemove.cpp src/commands/ListInsert.cpp src/commands/NameChange.cpp src/nodes/List.cpp test/NotificationsTest.cpp test/NotificationListener.cpp src/nodes/Node.cpp src/commands/UndoCommand.cpp test/ConcurrencyTests.cpp src/commands/SetModificationTarget.cpp src/nodes/Reference.cpp test/PersistenceTests.cpp test/PersistentStoreMock.cpp src/ModelException.cpp test/PositionTests.cpp src/nodes/Integer.cpp test/UndoRedoTests.cpp test/SimpleTests.cpp src/nodes/Text.cpp src/modelbase.cpp debug/modelbase1.0.0/ && (cd `dirname debug/modelbase1.0.0` && $(TAR) modelbase1.0.0.tar modelbase1.0.0 && $(COMPRESS) modelbase1.0.0.tar) && $(MOVE) `dirname debug/modelbase1.0.0`/modelbase1.0.0.tar.gz . && $(DEL_FILE) -r debug/modelbase1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) debug/modelbase.gch/c debug/modelbase.gch/c++
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Debug


###### Prefix headers
debug/modelbase.gch/c: src/precompiled.h 
	@$(CHK_DIR_EXISTS) debug/modelbase.gch/ || $(MKDIR) debug/modelbase.gch/ 
	$(CC) $(CFLAGS) $(INCPATH) -x c-header -c src/precompiled.h -o debug/modelbase.gch/c

debug/modelbase.gch/c++: src/precompiled.h 
	@$(CHK_DIR_EXISTS) debug/modelbase.gch/ || $(MKDIR) debug/modelbase.gch/ 
	$(CXX) $(CXXFLAGS) $(INCPATH) -x c++-header -c src/precompiled.h -o debug/modelbase.gch/c++

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_Model.cpp debug/moc_NotificationListener.cpp debug/moc_modelbase.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug/moc_Model.cpp debug/moc_NotificationListener.cpp debug/moc_modelbase.cpp
debug/moc_Model.cpp: src/modelbase_api.h \
		src/precompiled.h \
		src/nodes/Node.h \
		src/persistence/PersistentStore.h \
		src/concurrent/NodeReadWriteLock.h \
		src/concurrent/InterruptibleThread.h \
		src/model/ModelManager.h \
		src/model/Model.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) src/model/Model.h -o debug/moc_Model.cpp

debug/moc_NotificationListener.cpp: test/NotificationListener.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) test/NotificationListener.h -o debug/moc_NotificationListener.cpp

debug/moc_modelbase.cpp: src/modelbase_api.h \
		src/precompiled.h \
		src/modelbase.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) src/modelbase.h -o debug/moc_modelbase.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

debug/CompositeNodeChangeChild.o: src/commands/CompositeNodeChangeChild.cpp src/commands/CompositeNodeChangeChild.h \
		src/commands/NodeOwningCommand.h \
		src/commands/UndoCommand.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/nodes/composite/CompositeIndex.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/CompositeNodeChangeChild.o src/commands/CompositeNodeChangeChild.cpp

debug/CompositeNode.o: src/nodes/composite/CompositeNode.cpp src/commands/CompositeNodeChangeChild.h \
		src/commands/NodeOwningCommand.h \
		src/commands/UndoCommand.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/nodes/composite/CompositeIndex.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/CompositeNode.o src/nodes/composite/CompositeNode.cpp

debug/CompositeIndex.o: src/nodes/composite/CompositeIndex.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/CompositeIndex.o src/nodes/composite/CompositeIndex.cpp

debug/Attribute.o: src/nodes/composite/Attribute.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/Attribute.o src/nodes/composite/Attribute.cpp

debug/AttributeChain.o: src/nodes/composite/AttributeChain.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/AttributeChain.o src/nodes/composite/AttributeChain.cpp

debug/ClipboardStore.o: src/persistence/ClipboardStore.cpp src/persistence/ClipboardStore.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/persistence/PersistentStore.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/ClipboardStore.o src/persistence/ClipboardStore.cpp

debug/TestNodesInitializer.o: src/test_nodes/TestNodesInitializer.cpp src/test_nodes/TestNodesInitializer.h \
		src/modelbase_api.h \
		src/precompiled.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/TestNodesInitializer.o src/test_nodes/TestNodesInitializer.cpp

debug/NodeOwningCommand.o: src/commands/NodeOwningCommand.cpp src/commands/NodeOwningCommand.h \
		src/commands/UndoCommand.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/nodes/Node.h \
		src/persistence/PersistentStore.h \
		src/model/ModelManager.h \
		src/model/Model.h \
		src/concurrent/NodeReadWriteLock.h \
		src/concurrent/InterruptibleThread.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/NodeOwningCommand.o src/commands/NodeOwningCommand.cpp

debug/ModelManager.o: src/model/ModelManager.cpp src/model/ModelManager.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/model/Model.h \
		src/nodes/Node.h \
		src/persistence/PersistentStore.h \
		src/concurrent/NodeReadWriteLock.h \
		src/concurrent/InterruptibleThread.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/ModelManager.o src/model/ModelManager.cpp

debug/NodeReadWriteLock.o: src/concurrent/NodeReadWriteLock.cpp src/concurrent/NodeReadWriteLock.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/concurrent/InterruptibleThread.h \
		src/ModelException.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/NodeReadWriteLock.o src/concurrent/NodeReadWriteLock.cpp

debug/Model.o: src/model/Model.cpp src/model/Model.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/nodes/Node.h \
		src/persistence/PersistentStore.h \
		src/concurrent/NodeReadWriteLock.h \
		src/concurrent/InterruptibleThread.h \
		src/model/ModelManager.h \
		src/ModelException.h \
		src/commands/NodeOwningCommand.h \
		src/commands/UndoCommand.h \
		src/commands/SetModificationTarget.h \
		src/commands/AddModifiedNode.h \
		src/nodes/Reference.h \
		src/nodes/TypedList.h \
		src/nodes/List.h \
		src/nodes/nodeMacros.h \
		src/commands/ListInsert.h \
		src/persistence/ClipboardStore.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/Model.o src/model/Model.cpp

debug/VisitorTests.o: test/VisitorTests.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/VisitorTests.o test/VisitorTests.cpp

debug/PersistentStore.o: src/persistence/PersistentStore.cpp src/persistence/PersistentStore.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/nodes/Reference.h \
		src/nodes/TypedList.h \
		src/nodes/List.h \
		src/nodes/Node.h \
		src/nodes/nodeMacros.h \
		src/model/Model.h \
		src/concurrent/NodeReadWriteLock.h \
		src/concurrent/InterruptibleThread.h \
		src/model/ModelManager.h \
		src/commands/ListInsert.h \
		src/commands/NodeOwningCommand.h \
		src/commands/UndoCommand.h \
		src/ModelException.h \
		src/persistence/ClipboardStore.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/PersistentStore.o src/persistence/PersistentStore.cpp

debug/AddModifiedNode.o: src/commands/AddModifiedNode.cpp src/commands/AddModifiedNode.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/AddModifiedNode.o src/commands/AddModifiedNode.cpp

debug/PositionExtension.o: src/test_nodes/PositionExtension.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/PositionExtension.o src/test_nodes/PositionExtension.cpp

debug/Character.o: src/nodes/Character.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/Character.o src/nodes/Character.cpp

debug/Boolean.o: src/nodes/Boolean.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/Boolean.o src/nodes/Boolean.cpp

debug/Float.o: src/nodes/Float.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/Float.o src/nodes/Float.cpp

debug/ListPut.o: src/commands/ListPut.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/ListPut.o src/commands/ListPut.cpp

debug/PersistedNode.o: src/persistence/PersistedNode.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/PersistedNode.o src/persistence/PersistedNode.cpp

debug/BinaryNodePersistenceUnit.o: src/test_nodes/BinaryNodePersistenceUnit.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/BinaryNodePersistenceUnit.o src/test_nodes/BinaryNodePersistenceUnit.cpp

debug/PartialList.o: src/test_nodes/PartialList.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/PartialList.o src/test_nodes/PartialList.cpp

debug/BinaryNodeAccessUnit.o: src/test_nodes/BinaryNodeAccessUnit.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/BinaryNodeAccessUnit.o src/test_nodes/BinaryNodeAccessUnit.cpp

debug/BinaryNode.o: src/test_nodes/BinaryNode.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/BinaryNode.o src/test_nodes/BinaryNode.cpp

debug/ListTest.o: test/ListTest.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/ListTest.o test/ListTest.cpp

debug/ListRemove.o: src/commands/ListRemove.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/ListRemove.o src/commands/ListRemove.cpp

debug/ListInsert.o: src/commands/ListInsert.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/ListInsert.o src/commands/ListInsert.cpp

debug/NameChange.o: src/commands/NameChange.cpp src/model/Model.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/nodes/Node.h \
		src/persistence/PersistentStore.h \
		src/concurrent/NodeReadWriteLock.h \
		src/concurrent/InterruptibleThread.h \
		src/model/ModelManager.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/NameChange.o src/commands/NameChange.cpp

debug/List.o: src/nodes/List.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/List.o src/nodes/List.cpp

debug/NotificationsTest.o: test/NotificationsTest.cpp test/NotificationListener.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/NotificationsTest.o test/NotificationsTest.cpp

debug/NotificationListener.o: test/NotificationListener.cpp test/NotificationListener.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/NotificationListener.o test/NotificationListener.cpp

debug/Node.o: src/nodes/Node.cpp src/nodes/Node.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/persistence/PersistentStore.h \
		src/modelbase.h \
		src/model/Model.h \
		src/concurrent/NodeReadWriteLock.h \
		src/concurrent/InterruptibleThread.h \
		src/model/ModelManager.h \
		src/nodes/Reference.h \
		src/nodes/TypedList.h \
		src/nodes/List.h \
		src/nodes/nodeMacros.h \
		src/commands/ListInsert.h \
		src/commands/NodeOwningCommand.h \
		src/commands/UndoCommand.h \
		src/ModelException.h \
		src/persistence/ClipboardStore.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/Node.o src/nodes/Node.cpp

debug/UndoCommand.o: src/commands/UndoCommand.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/UndoCommand.o src/commands/UndoCommand.cpp

debug/ConcurrencyTests.o: test/ConcurrencyTests.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/ConcurrencyTests.o test/ConcurrencyTests.cpp

debug/SetModificationTarget.o: src/commands/SetModificationTarget.cpp src/commands/SetModificationTarget.h \
		src/concurrent/NodeReadWriteLock.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/concurrent/InterruptibleThread.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/SetModificationTarget.o src/commands/SetModificationTarget.cpp

debug/Reference.o: src/nodes/Reference.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/Reference.o src/nodes/Reference.cpp

debug/PersistenceTests.o: test/PersistenceTests.cpp test/PersistentStoreMock.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/PersistenceTests.o test/PersistenceTests.cpp

debug/PersistentStoreMock.o: test/PersistentStoreMock.cpp test/PersistentStoreMock.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/PersistentStoreMock.o test/PersistentStoreMock.cpp

debug/ModelException.o: src/ModelException.cpp src/ModelException.h \
		src/modelbase_api.h \
		src/precompiled.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/ModelException.o src/ModelException.cpp

debug/PositionTests.o: test/PositionTests.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/PositionTests.o test/PositionTests.cpp

debug/Integer.o: src/nodes/Integer.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/Integer.o src/nodes/Integer.cpp

debug/UndoRedoTests.o: test/UndoRedoTests.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/UndoRedoTests.o test/UndoRedoTests.cpp

debug/SimpleTests.o: test/SimpleTests.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/SimpleTests.o test/SimpleTests.cpp

debug/Text.o: src/nodes/Text.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/Text.o src/nodes/Text.cpp

debug/modelbase.o: src/modelbase.cpp src/modelbase.h \
		src/modelbase_api.h \
		src/precompiled.h \
		src/model/ModelManager.h \
		src/nodes/Text.h \
		src/nodes/TypedList.h \
		src/nodes/List.h \
		src/nodes/Node.h \
		src/persistence/PersistentStore.h \
		src/nodes/nodeMacros.h \
		src/model/Model.h \
		src/concurrent/NodeReadWriteLock.h \
		src/concurrent/InterruptibleThread.h \
		src/commands/ListInsert.h \
		src/commands/NodeOwningCommand.h \
		src/commands/UndoCommand.h \
		src/ModelException.h \
		src/persistence/ClipboardStore.h \
		src/nodes/Integer.h \
		src/nodes/Float.h \
		src/nodes/Boolean.h \
		src/nodes/Character.h \
		src/nodes/Reference.h \
		src/nodes/composite/CompositeNode.h \
		src/nodes/composite/AttributeChain.h \
		src/nodes/composite/Attribute.h \
		src/nodes/composite/CompositeIndex.h \
		src/test_nodes/BinaryNode.h \
		src/test_nodes/BinaryNodeAccessUnit.h \
		src/test_nodes/PositionExtension.h \
		src/test_nodes/TestNodesInitializer.h \
		debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/modelbase.o src/modelbase.cpp

debug/moc_Model.o: debug/moc_Model.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/moc_Model.o debug/moc_Model.cpp

debug/moc_NotificationListener.o: debug/moc_NotificationListener.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/moc_NotificationListener.o debug/moc_NotificationListener.cpp

debug/moc_modelbase.o: debug/moc_modelbase.cpp debug/modelbase.gch/c++
	$(CXX) -c -include debug/modelbase $(CXXFLAGS) $(INCPATH) -o debug/moc_modelbase.o debug/moc_modelbase.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ || $(MKDIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/home/marti/git/Envision/DebugBuild/plugins/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/home/marti/git/Envision/DebugBuild/plugins/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ 


install_pluginmeta: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ || $(MKDIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ 
	-$(INSTALL_FILE) /home/marti/git/Envision/ModelBase/modelbase.plugin $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/


uninstall_pluginmeta:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/modelbase.plugin
	-$(DEL_DIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ 


install:  install_target install_pluginmeta  FORCE

uninstall: uninstall_target uninstall_pluginmeta   FORCE

FORCE:

