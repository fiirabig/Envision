#############################################################################
# Makefile for building: libcustommethodcall.so
# Generated by qmake (2.01a) (Qt 4.8.5) on: Tue Oct 8 10:52:43 2013
# Project:  CustomMethodCall.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DDEBUG -DCUSTOMMETHODCALL_LIBRARY -DQT_PLUGIN -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -D_REENTRANT -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -pedantic-errors -Werror -Wextra -O2 -g -fno-omit-frame-pointer -g -D_REENTRANT -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include -Isrc -Itest -I../../Envision -Idebug
LINK          = g++
LFLAGS        = -Wl,-rpath,'$$ORIGIN' -Wl,-rpath,'$$ORIGIN/qt' -Wl,-rpath,'$$ORIGIN/..' -Wl,-rpath,'$$ORIGIN/../qt' -shared
LIBS          = $(SUBLIBS)  -L/usr/lib64 -L/home/marti/git/Envision/Core/../DebugBuild -lcore -lpthread -lQtGui -lQtCore 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = src/items/SumMethodVis.cpp \
		src/items/SumMethodVisStyle.cpp \
		src/items/InsertMethodVis.cpp \
		src/items/InsertMethodVisStyle.cpp \
		src/items/EmptyMethodVisStyle.cpp \
		src/items/EmptyMethodVis.cpp \
		src/items/FindMethodVis.cpp \
		src/items/FindMethodVisStyle.cpp \
		src/CustomMethodCallException.cpp \
		src/custommethodcall.cpp \
		test/SimpleTest.cpp debug/moc_custommethodcall.cpp
OBJECTS       = debug/SumMethodVis.o \
		debug/SumMethodVisStyle.o \
		debug/InsertMethodVis.o \
		debug/InsertMethodVisStyle.o \
		debug/EmptyMethodVisStyle.o \
		debug/EmptyMethodVis.o \
		debug/FindMethodVis.o \
		debug/FindMethodVisStyle.o \
		debug/CustomMethodCallException.o \
		debug/custommethodcall.o \
		debug/SimpleTest.o \
		debug/moc_custommethodcall.o
DIST          = /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		../Core/common.pri \
		../Core/common_plugin.pri \
		/usr/lib64/qt4/mkspecs/features/debug.prf \
		/usr/lib64/qt4/mkspecs/features/debug_and_release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/build_pass.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/shared.prf \
		/usr/lib64/qt4/mkspecs/features/dll.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		CustomMethodCall.pro
QMAKE_TARGET  = custommethodcall
DESTDIR       = 
TARGET        = libcustommethodcall.so
TARGETD       = libcustommethodcall.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c -include debug/custommethodcall $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Debug  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	{ test -z "$(DESTDIR)" || cd "$(DESTDIR)"; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index ." -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true



qmake:  FORCE
	@$(QMAKE) CONFIG+=debug_and_release -o Makefile.Debug CustomMethodCall.pro

dist: 
	@$(CHK_DIR_EXISTS) debug/custommethodcall1.0.0 || $(MKDIR) debug/custommethodcall1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) debug/custommethodcall1.0.0/ && $(COPY_FILE) --parents src/CustomMethodCallException.h src/custommethodcall_api.h src/items/EmptyMethodVis.h src/items/EmptyMethodVisStyle.h src/items/FindMethodVis.h src/items/FindMethodVisStyle.h src/items/InsertMethodVis.h src/items/InsertMethodVisStyle.h src/items/SumMethodVis.h src/items/SumMethodVisStyle.h src/precompiled.h src/custommethodcall.h debug/custommethodcall1.0.0/ && $(COPY_FILE) --parents src/items/SumMethodVis.cpp src/items/SumMethodVisStyle.cpp src/items/InsertMethodVis.cpp src/items/InsertMethodVisStyle.cpp src/items/EmptyMethodVisStyle.cpp src/items/EmptyMethodVis.cpp src/items/FindMethodVis.cpp src/items/FindMethodVisStyle.cpp src/CustomMethodCallException.cpp src/custommethodcall.cpp test/SimpleTest.cpp debug/custommethodcall1.0.0/ && (cd `dirname debug/custommethodcall1.0.0` && $(TAR) custommethodcall1.0.0.tar custommethodcall1.0.0 && $(COMPRESS) custommethodcall1.0.0.tar) && $(MOVE) `dirname debug/custommethodcall1.0.0`/custommethodcall1.0.0.tar.gz . && $(DEL_FILE) -r debug/custommethodcall1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) debug/custommethodcall.gch/c debug/custommethodcall.gch/c++
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Debug


###### Prefix headers
debug/custommethodcall.gch/c: src/precompiled.h 
	@$(CHK_DIR_EXISTS) debug/custommethodcall.gch/ || $(MKDIR) debug/custommethodcall.gch/ 
	$(CC) $(CFLAGS) $(INCPATH) -x c-header -c src/precompiled.h -o debug/custommethodcall.gch/c

debug/custommethodcall.gch/c++: src/precompiled.h 
	@$(CHK_DIR_EXISTS) debug/custommethodcall.gch/ || $(MKDIR) debug/custommethodcall.gch/ 
	$(CXX) $(CXXFLAGS) $(INCPATH) -x c++-header -c src/precompiled.h -o debug/custommethodcall.gch/c++

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_custommethodcall.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug/moc_custommethodcall.cpp
debug/moc_custommethodcall.cpp: src/custommethodcall_api.h \
		src/precompiled.h \
		src/custommethodcall.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) src/custommethodcall.h -o debug/moc_custommethodcall.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

debug/SumMethodVis.o: src/items/SumMethodVis.cpp debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/SumMethodVis.o src/items/SumMethodVis.cpp

debug/SumMethodVisStyle.o: src/items/SumMethodVisStyle.cpp debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/SumMethodVisStyle.o src/items/SumMethodVisStyle.cpp

debug/InsertMethodVis.o: src/items/InsertMethodVis.cpp debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/InsertMethodVis.o src/items/InsertMethodVis.cpp

debug/InsertMethodVisStyle.o: src/items/InsertMethodVisStyle.cpp debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/InsertMethodVisStyle.o src/items/InsertMethodVisStyle.cpp

debug/EmptyMethodVisStyle.o: src/items/EmptyMethodVisStyle.cpp debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/EmptyMethodVisStyle.o src/items/EmptyMethodVisStyle.cpp

debug/EmptyMethodVis.o: src/items/EmptyMethodVis.cpp debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/EmptyMethodVis.o src/items/EmptyMethodVis.cpp

debug/FindMethodVis.o: src/items/FindMethodVis.cpp debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/FindMethodVis.o src/items/FindMethodVis.cpp

debug/FindMethodVisStyle.o: src/items/FindMethodVisStyle.cpp debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/FindMethodVisStyle.o src/items/FindMethodVisStyle.cpp

debug/CustomMethodCallException.o: src/CustomMethodCallException.cpp src/CustomMethodCallException.h \
		src/custommethodcall_api.h \
		src/precompiled.h \
		debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/CustomMethodCallException.o src/CustomMethodCallException.cpp

debug/custommethodcall.o: src/custommethodcall.cpp src/custommethodcall.h \
		src/custommethodcall_api.h \
		src/precompiled.h \
		debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/custommethodcall.o src/custommethodcall.cpp

debug/SimpleTest.o: test/SimpleTest.cpp debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/SimpleTest.o test/SimpleTest.cpp

debug/moc_custommethodcall.o: debug/moc_custommethodcall.cpp debug/custommethodcall.gch/c++
	$(CXX) -c -include debug/custommethodcall $(CXXFLAGS) $(INCPATH) -o debug/moc_custommethodcall.o debug/moc_custommethodcall.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ || $(MKDIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/home/marti/git/Envision/DebugBuild/plugins/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/home/marti/git/Envision/DebugBuild/plugins/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ 


install_pluginmeta: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ || $(MKDIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ 
	-$(INSTALL_FILE) /home/marti/git/Envision/CustomMethodCall/custommethodcall.plugin $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/


uninstall_pluginmeta:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/custommethodcall.plugin
	-$(DEL_DIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/plugins/ 


install_styles: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/styles/ || $(MKDIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/styles/ 
	-$(INSTALL_DIR) /home/marti/git/Envision/CustomMethodCall/styles/icon $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/styles/
	-$(INSTALL_DIR) /home/marti/git/Envision/CustomMethodCall/styles/item $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/styles/


uninstall_styles:  FORCE
	-$(DEL_FILE) -r $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/styles/icon 
	 -$(DEL_FILE) -r $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/styles/item
	-$(DEL_DIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/styles/ 


install:  install_target install_pluginmeta install_styles  FORCE

uninstall: uninstall_target uninstall_pluginmeta uninstall_styles   FORCE

FORCE:

