#############################################################################
# Makefile for building: libcore.so
# Generated by qmake (2.01a) (Qt 4.8.5) on: Tue Oct 8 10:52:43 2013
# Project:  Core.pro
# Template: lib
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DDEBUG -DCORE_LIBRARY -DQT_PLUGIN -DQT_XML_LIB -DQT_GUI_LIB -DQT_CORE_LIB -DQT_SHARED
CFLAGS        = -pipe -g -D_REENTRANT -Wall -W -fPIC $(DEFINES)
CXXFLAGS      = -pipe -std=c++11 -pedantic-errors -Werror -Wextra -O2 -g -fno-omit-frame-pointer -g -D_REENTRANT -Wall -W -fPIC $(DEFINES)
INCPATH       = -I/usr/lib64/qt4/mkspecs/linux-g++ -I. -I/usr/include/QtCore -I/usr/include/QtGui -I/usr/include/QtXml -I/usr/include -Isrc -I./test -I../../Envision -Idebug
LINK          = g++
LFLAGS        = -Wl,-rpath,'$$ORIGIN' -Wl,-rpath,'$$ORIGIN/qt' -Wl,-rpath,'$$ORIGIN/..' -Wl,-rpath,'$$ORIGIN/../qt' -shared
LIBS          = $(SUBLIBS)  -L/usr/lib64 -lpthread -lQtXml -lQtGui -lQtCore 
AR            = ar cqs
RANLIB        = 
QMAKE         = /usr/bin/qmake
TAR           = tar -cf
COMPRESS      = gzip -9f
COPY          = cp -f
SED           = sed
COPY_FILE     = $(COPY)
COPY_DIR      = $(COPY) -r
STRIP         = 
INSTALL_FILE  = install -m 644 -p
INSTALL_DIR   = $(COPY_DIR)
INSTALL_PROGRAM = install -m 755 -p
DEL_FILE      = rm -f
SYMLINK       = ln -f -s
DEL_DIR       = rmdir
MOVE          = mv -f
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir -p

####### Output directory

OBJECTS_DIR   = debug/

####### Files

SOURCES       = src/AdapterManager.cpp \
		src/InitializationRegistry.cpp \
		src/EnvisionException.cpp \
		src/EnvisionManager.cpp \
		src/core.cpp \
		src/EnvisionApplication.cpp \
		src/TestEvent.cpp \
		src/TestRunner.cpp \
		src/PluginManager.cpp \
		src/EnvisionWindow.cpp debug/moc_TestRunner.cpp \
		debug/moc_EnvisionWindow.cpp
OBJECTS       = debug/AdapterManager.o \
		debug/InitializationRegistry.o \
		debug/EnvisionException.o \
		debug/EnvisionManager.o \
		debug/core.o \
		debug/EnvisionApplication.o \
		debug/TestEvent.o \
		debug/TestRunner.o \
		debug/PluginManager.o \
		debug/EnvisionWindow.o \
		debug/moc_TestRunner.o \
		debug/moc_EnvisionWindow.o
DIST          = /usr/lib64/qt4/mkspecs/common/unix.conf \
		/usr/lib64/qt4/mkspecs/common/linux.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base.conf \
		/usr/lib64/qt4/mkspecs/common/gcc-base-unix.conf \
		/usr/lib64/qt4/mkspecs/common/g++-base.conf \
		/usr/lib64/qt4/mkspecs/common/g++-unix.conf \
		/usr/lib64/qt4/mkspecs/qconfig.pri \
		/usr/lib64/qt4/mkspecs/features/qt_functions.prf \
		/usr/lib64/qt4/mkspecs/features/qt_config.prf \
		/usr/lib64/qt4/mkspecs/features/exclusive_builds.prf \
		/usr/lib64/qt4/mkspecs/features/default_pre.prf \
		common.pri \
		/usr/lib64/qt4/mkspecs/features/debug.prf \
		/usr/lib64/qt4/mkspecs/features/debug_and_release.prf \
		/usr/lib64/qt4/mkspecs/features/default_post.prf \
		/usr/lib64/qt4/mkspecs/features/build_pass.prf \
		/usr/lib64/qt4/mkspecs/features/unix/thread.prf \
		/usr/lib64/qt4/mkspecs/features/warn_on.prf \
		/usr/lib64/qt4/mkspecs/features/qt.prf \
		/usr/lib64/qt4/mkspecs/features/moc.prf \
		/usr/lib64/qt4/mkspecs/features/shared.prf \
		/usr/lib64/qt4/mkspecs/features/dll.prf \
		/usr/lib64/qt4/mkspecs/features/unix/gdb_dwarf_index.prf \
		/usr/lib64/qt4/mkspecs/features/resources.prf \
		/usr/lib64/qt4/mkspecs/features/uic.prf \
		/usr/lib64/qt4/mkspecs/features/yacc.prf \
		/usr/lib64/qt4/mkspecs/features/lex.prf \
		/usr/lib64/qt4/mkspecs/features/include_source_dir.prf \
		Core.pro
QMAKE_TARGET  = core
DESTDIR       = 
TARGET        = libcore.so
TARGETD       = libcore.so

first: all
####### Implicit rules

.SUFFIXES: .o .c .cpp .cc .cxx .C

.cpp.o:
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cc.o:
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.cxx.o:
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.C.o:
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o "$@" "$<"

.c.o:
	$(CC) -c -include debug/core $(CFLAGS) $(INCPATH) -o "$@" "$<"

####### Build rules

all: Makefile.Debug  $(TARGET)

$(TARGET):  $(OBJECTS) $(SUBLIBS) $(OBJCOMP)  
	-$(DEL_FILE) $(TARGET)
	$(LINK) $(LFLAGS) -o $(TARGET) $(OBJECTS) $(LIBS) $(OBJCOMP)
	{ test -z "$(DESTDIR)" || cd "$(DESTDIR)"; } && test $$(gdb --version | sed -e 's,[^0-9]\+\([0-9]\)\.\([0-9]\).*,\1\2,;q') -gt 72 && gdb --nx --batch --quiet -ex 'set confirm off' -ex "save gdb-index ." -ex quit '$(TARGET)' && test -f $(TARGET).gdb-index && objcopy --add-section '.gdb_index=$(TARGET).gdb-index' --set-section-flags '.gdb_index=readonly' '$(TARGET)' '$(TARGET)' && rm -f $(TARGET).gdb-index || true



qmake:  FORCE
	@$(QMAKE) CONFIG+=debug_and_release -o Makefile.Debug Core.pro

dist: 
	@$(CHK_DIR_EXISTS) debug/core1.0.0 || $(MKDIR) debug/core1.0.0 
	$(COPY_FILE) --parents $(SOURCES) $(DIST) debug/core1.0.0/ && $(COPY_FILE) --parents src/reflect/typeIdMacros.h src/reflect/Reflect.h src/AdapterManager.h src/InitializationRegistry.h src/core_api.h src/core.h src/EnvisionApplication.h src/EnvisionException.h src/EnvisionManager.h src/EnvisionPlugin.h src/PluginInfo.h src/global.h src/precompiled.h src/TestEvent.h src/TestRunner.h src/PluginManager.h src/EnvisionWindow.h debug/core1.0.0/ && $(COPY_FILE) --parents src/AdapterManager.cpp src/InitializationRegistry.cpp src/EnvisionException.cpp src/EnvisionManager.cpp src/core.cpp src/EnvisionApplication.cpp src/TestEvent.cpp src/TestRunner.cpp src/PluginManager.cpp src/EnvisionWindow.cpp debug/core1.0.0/ && (cd `dirname debug/core1.0.0` && $(TAR) core1.0.0.tar core1.0.0 && $(COMPRESS) core1.0.0.tar) && $(MOVE) `dirname debug/core1.0.0`/core1.0.0.tar.gz . && $(DEL_FILE) -r debug/core1.0.0


clean:compiler_clean 
	-$(DEL_FILE) $(OBJECTS)
	-$(DEL_FILE) debug/core.gch/c debug/core.gch/c++
	-$(DEL_FILE) *~ core *.core


####### Sub-libraries

distclean: clean
	-$(DEL_FILE) $(TARGET) 
	-$(DEL_FILE) Makefile.Debug


###### Prefix headers
debug/core.gch/c: src/precompiled.h src/global.h
	@$(CHK_DIR_EXISTS) debug/core.gch/ || $(MKDIR) debug/core.gch/ 
	$(CC) $(CFLAGS) $(INCPATH) -x c-header -c src/precompiled.h -o debug/core.gch/c

debug/core.gch/c++: src/precompiled.h src/global.h
	@$(CHK_DIR_EXISTS) debug/core.gch/ || $(MKDIR) debug/core.gch/ 
	$(CXX) $(CXXFLAGS) $(INCPATH) -x c++-header -c src/precompiled.h -o debug/core.gch/c++

check: first

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: debug/moc_TestRunner.cpp debug/moc_EnvisionWindow.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) debug/moc_TestRunner.cpp debug/moc_EnvisionWindow.cpp
debug/moc_TestRunner.cpp: src/PluginManager.h \
		src/PluginInfo.h \
		src/core_api.h \
		src/precompiled.h \
		src/global.h \
		src/EnvisionPlugin.h \
		src/EnvisionManager.h \
		src/InitializationRegistry.h \
		src/TestRunner.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) src/TestRunner.h -o debug/moc_TestRunner.cpp

debug/moc_EnvisionWindow.cpp: src/EnvisionWindow.h
	/usr/lib64/qt4/bin/moc $(DEFINES) $(INCPATH) src/EnvisionWindow.h -o debug/moc_EnvisionWindow.cpp

compiler_rcc_make_all:
compiler_rcc_clean:
compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all:
compiler_uic_clean:
compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean 

####### Compile

debug/AdapterManager.o: src/AdapterManager.cpp src/AdapterManager.h \
		src/core_api.h \
		src/precompiled.h \
		src/global.h \
		debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/AdapterManager.o src/AdapterManager.cpp

debug/InitializationRegistry.o: src/InitializationRegistry.cpp src/InitializationRegistry.h \
		src/core_api.h \
		src/precompiled.h \
		src/global.h \
		src/EnvisionException.h \
		debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/InitializationRegistry.o src/InitializationRegistry.cpp

debug/EnvisionException.o: src/EnvisionException.cpp src/EnvisionException.h \
		src/core_api.h \
		src/precompiled.h \
		src/global.h \
		debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/EnvisionException.o src/EnvisionException.cpp

debug/EnvisionManager.o: src/EnvisionManager.cpp src/EnvisionManager.h \
		src/core_api.h \
		src/precompiled.h \
		src/global.h \
		src/PluginInfo.h \
		src/EnvisionException.h \
		src/PluginManager.h \
		src/EnvisionPlugin.h \
		src/InitializationRegistry.h \
		src/TestRunner.h \
		debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/EnvisionManager.o src/EnvisionManager.cpp

debug/core.o: src/core.cpp src/EnvisionWindow.h \
		src/PluginManager.h \
		src/PluginInfo.h \
		src/core_api.h \
		src/precompiled.h \
		src/global.h \
		src/EnvisionPlugin.h \
		src/EnvisionManager.h \
		src/InitializationRegistry.h \
		src/EnvisionApplication.h \
		src/EnvisionException.h \
		src/TestRunner.h \
		debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/core.o src/core.cpp

debug/EnvisionApplication.o: src/EnvisionApplication.cpp src/EnvisionApplication.h \
		src/precompiled.h \
		src/global.h \
		src/EnvisionManager.h \
		src/core_api.h \
		src/PluginInfo.h \
		debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/EnvisionApplication.o src/EnvisionApplication.cpp

debug/TestEvent.o: src/TestEvent.cpp src/TestEvent.h \
		debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/TestEvent.o src/TestEvent.cpp

debug/TestRunner.o: src/TestRunner.cpp src/TestRunner.h \
		src/PluginManager.h \
		src/PluginInfo.h \
		src/core_api.h \
		src/precompiled.h \
		src/global.h \
		src/EnvisionPlugin.h \
		src/EnvisionManager.h \
		src/InitializationRegistry.h \
		src/TestEvent.h \
		src/EnvisionException.h \
		debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/TestRunner.o src/TestRunner.cpp

debug/PluginManager.o: src/PluginManager.cpp src/precompiled.h \
		src/global.h \
		src/EnvisionPlugin.h \
		src/EnvisionManager.h \
		src/core_api.h \
		src/PluginInfo.h \
		src/InitializationRegistry.h \
		src/PluginManager.h \
		src/EnvisionException.h \
		debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/PluginManager.o src/PluginManager.cpp

debug/EnvisionWindow.o: src/EnvisionWindow.cpp src/EnvisionWindow.h \
		debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/EnvisionWindow.o src/EnvisionWindow.cpp

debug/moc_TestRunner.o: debug/moc_TestRunner.cpp debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/moc_TestRunner.o debug/moc_TestRunner.cpp

debug/moc_EnvisionWindow.o: debug/moc_EnvisionWindow.cpp debug/core.gch/c++
	$(CXX) -c -include debug/core $(CXXFLAGS) $(INCPATH) -o debug/moc_EnvisionWindow.o debug/moc_EnvisionWindow.cpp

####### Install

install_target: first FORCE
	@$(CHK_DIR_EXISTS) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/ || $(MKDIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/ 
	-$(INSTALL_PROGRAM) "$(TARGET)" "$(INSTALL_ROOT)/home/marti/git/Envision/DebugBuild/$(TARGET)"

uninstall_target:  FORCE
	-$(DEL_FILE) "$(INSTALL_ROOT)/home/marti/git/Envision/DebugBuild/$(TARGET)"
	-$(DEL_DIR) $(INSTALL_ROOT)/home/marti/git/Envision/Core/../DebugBuild/ 


install:  install_target  FORCE

uninstall: uninstall_target   FORCE

FORCE:

